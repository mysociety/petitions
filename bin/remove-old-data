#!/usr/bin/perl -w

# remove-old-data:
# Remove old personal data from the petitions database, either by deleting
# rows (for unconfirmed signatures), or scrubbing the email and address
# fields (as we need the names to show on the site).
#
# Copyright (c) 2008 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/

use strict;
require 5.8.0;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../commonlib/perllib";

use Getopt::Long;
use POSIX qw(strftime);
use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);
use Petitions;

my $verbose = 0;
if (!GetOptions( 'verbose=i' =>  \$verbose)) {
    exit(1);
}

my $date = dbh()->selectrow_array("select ms_current_date() - interval '2 years'");

# Get all petitions that closed over 2 years ago
my $ids = dbh()->selectcol_arrayref("select id from petition where deadline < '$date' and status='finished'");
my ($unconfirmed, $confirmed) = (0,0);
foreach my $id (@$ids) {
    # Remove all unconfirmed signatures
    my $un = dbh()->do("delete from signer
        where petition_id = ? and emailsent in ('failed', 'sent')",
        undef, $id);

    # Remove personal information except name from confirmed signatures
    my $c = dbh()->do("update signer set address='', email='', postcode=''
        where petition_id = ? and email != ''
            and emailsent = 'confirmed' and overseas is null",
        undef, $id);
    $c += dbh()->do("update signer set address='', email='', overseas=''
        where petition_id = ? and email != ''
            and emailsent = 'confirmed' and postcode is null",
        undef, $id);
    dbh()->commit();
    print "Petition id $id, $un unconfirmed deleted, $c scrubbed\n"
        if $verbose>0 && ($un>0 || $c>0);
    $unconfirmed += $un;
    $confirmed += $c;
}

print "\n$unconfirmed deleted from database, $confirmed scrubbed\n"
    if $verbose>0;


# Special RBWM handling
exit unless mySociety::Config::get('SITE_NAME') eq 'rbwm';

$date = dbh()->selectrow_array("select ms_current_date() - interval '5 years'");
$ids = dbh()->selectcol_arrayref("select id from petition where deadline < '$date' and status='finished'");
my $names = 0;
foreach my $id (@$ids) {
    dbh()->do("update petition
        set lastupdate = ms_current_timestamp(),
            cached_signers = 1,
            offline_signers = coalesce(offline_signers, 0) +
            (select count(*) from signer where petition_id = petition.id and showname = 't' and emailsent = 'confirmed')
        where id = ?",
        undef, $id);
    my $c = dbh()->do('delete from signer where petition_id = ?', undef, $id);

    dbh()->commit();
    mySociety::Memcached::set("lastupdate:$id", time());
    print "Petition id $id, $c names scrubbed\n"
        if $verbose>0 && $c>0;
    $names += $c;
}

print "\n$names names scrubbed\n"
    if $verbose>0;
